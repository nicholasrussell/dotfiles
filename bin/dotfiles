#!/usr/bin/env bash

export DOTFILES_UTILS_LOC=~/.dotfiles/source/0_utils.sh

source $DOTFILES_UTILS_LOC

function dotfiles_pre_hook() {
    local dotfiles_pre_hook
    dotfiles_pre_hook=$DOTFILES/hook/pre_dotfiles.sh
    if [ -e $dotfiles_pre_hook ]; then
        log_info "Running pre hook...\n"
        source $dotfiles_pre_hook
    fi
}

function dotfiles_post_hook() {
    local dotfiles_post_hook
    dotfiles_post_hook=$DOTFILES/hook/post_dotfiles.sh
    if [ -e $dotfiles_post_hook ]; then
        log_info "Running post hook...\n"
        source $dotfiles_post_hook
    fi
}

function dotfiles_copy() {
    if [ -e $DOTFILES/backup/copy ]; then
        rm -r $DOTFILES/backup/copy
    fi
    mkdir -p $DOTFILES/backup/copy

    log_header1 "Copying files..."
    shopt -s dotglob
    shopt -s globstar
    local dotfiles_copy
    for dotfiles_copy in $DOTFILES/copy/**/*; do
        if [ -f $dotfiles_copy ]; then
            dotfiles_copy=$(echo $dotfiles_copy | sed -e 's,'"$DOTFILES"/copy/',,')
            if [ -e ~/${dotfiles_copy} ]; then
                log_warn "Backing up ~/${dotfiles_copy} to $DOTFILES/backup/copy..."
                cp -L ~/${dotfiles_copy} $DOTFILES/backup/copy
                rm -r ~/${dotfiles_copy}
            fi
            file_dir="$(dirname ~/${dotfiles_copy})"
            if [ ! -d $file_dir ]; then
                mkdir -p $file_dir
            fi
            log_info "Copying ${dotfiles_copy} to ~/${dotfiles_copy}..."
            cp -R $DOTFILES/copy/${dotfiles_copy} ~/${dotfiles_copy}
        fi
    done
    shopt -u dotglob

    log_success "Finished copying files\n"
}

function dotfiles_link() {
    if [ -e $DOTFILES/backup/link ]; then
        rm -r $DOTFILES/backup/link
    fi
    mkdir -p $DOTFILES/backup/link

    log_header1 "Linking files..."
    shopt -s dotglob
    shopt -s globstar
    local dotfiles_link
    for dotfiles_link in $DOTFILES/link/**/*; do
        if [ -f $dotfiles_link ]; then
            dotfiles_link=$(echo $dotfiles_link | sed -e 's,'"$DOTFILES"/link/',,')
            if [ -e ~/${dotfiles_link} ]; then
                log_warn "Backing up ~/${dotfiles_link} to $DOTFILES/backup/link..."
                cp -L ~/${dotfiles_link} $DOTFILES/backup/link
            fi
            file_dir="$(dirname ~/${dotfiles_link})"
            if [ ! -d $file_dir ]; then
                mkdir -p $file_dir
            fi
            log_info "Linking ~/${dotfiles_link} to $DOTFILES/link/${dotfiles_link}..."
            ln -sf $DOTFILES/link/${dotfiles_link} ~/${dotfiles_link}
        fi
    done
    shopt -u dotglob

    if is_osx; then
        ln -sf ~/.profile ~/.bash_profile
    fi

    log_success "Finished linking files\n"
}

function dotfiles_source() {
    # Source files in the DOTFILES/source dir
    local dotfiles_source_file
    for dotfiles_source_file in $DOTFILES/source/*; do
        source "$dotfiles_source_file"
    done
}

function dotfiles_init() {
    local dotfiles_init_file
    for dotfiles_init_file in $DOTFILES/init/*; do
        source "$dotfiles_init_file"
    done
}

function dotfiles_tools() {
    log_header1 "Installing tools...\n"

    if is_ubuntu; then
        local dotfiles_tool_file
        for dotfiles_tool_file in $DOTFILES/tools/*; do
            if [ "$dotfiles_tool_file" != "$DOTFILES/tools/manual" ]; then
                source "$dotfiles_tool_file"
            fi
        done
    elif is_osx; then
        source "$DOTFILES/tools/00_osx.sh"
    fi

    log_success "Finished installing tools\n"
}

# Prompt for sudo early
sudo -E -s -- <<EOS
source $DOTFILES_UTILS_LOC;
log_header1 "Beginning system set up...\n"
EOS

function dotfiles_main() {
    dotfiles_pre_hook

    dotfiles_copy
    dotfiles_link
    dotfiles_source
    dotfiles_init
    dotfiles_tools

    dotfiles_post_hook
}

dotfiles_main

unset DOTFILES_UTILS_LOC

log_success "Done!"
